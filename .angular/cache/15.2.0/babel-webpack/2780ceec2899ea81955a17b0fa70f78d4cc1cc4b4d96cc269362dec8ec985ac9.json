{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./token-storage.service\";\nconst TOKEN_HEADER_KEY = 'Authorization';\nexport class AuthInterceptor {\n  constructor(token) {\n    this.token = token;\n  }\n  intercept(req, next) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({\n        headers: req.headers.set(TOKEN_HEADER_KEY, token)\n      });\n    }\n    return next.handle(authReq);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)(i0.ɵɵinject(i1.TokenStorageService));\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});\nexport const httpInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n}];","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,sBAAsB;;;AAMxD,MAAMC,gBAAgB,GAAG,eAAe;AAGxC,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,KAA0B;IAA1B,UAAK,GAALA,KAAK;EAAyB;EAElDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,OAAO,GAAGF,GAAG;IACjB,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK,CAACK,QAAQ,EAAE;IACnC,IAAIL,KAAK,IAAI,IAAI,EAAE;MACjBI,OAAO,GAAGF,GAAG,CAACI,KAAK,CAAC;QAAEC,OAAO,EAAEL,GAAG,CAACK,OAAO,CAACC,GAAG,CAACX,gBAAgB,EAAEG,KAAK;MAAC,CAAE,CAAC;;IAE5E,OAAOG,IAAI,CAACM,MAAM,CAACL,OAAO,CAAC;EAC7B;;AAXWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;AAAA;AAc5B,OAAO,MAAMa,wBAAwB,GAAG,CACtC;EAAEC,OAAO,EAAEhB,iBAAiB;EAAEiB,QAAQ,EAAEf,eAAe;EAAEgB,KAAK,EAAE;AAAI,CAAE,CACvE","names":["HTTP_INTERCEPTORS","TOKEN_HEADER_KEY","AuthInterceptor","constructor","token","intercept","req","next","authReq","getToken","clone","headers","set","handle","factory","httpInterceptorProviders","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\ThinkPad\\Desktop\\front_app\\src\\app\\auth\\auth-interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\n\r\nimport { TokenStorageService } from './token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}