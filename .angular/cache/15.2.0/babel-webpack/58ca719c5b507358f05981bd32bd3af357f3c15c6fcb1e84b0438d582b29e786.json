{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  attemptAuth(credentials) {\n    return this.http.post(this.loginUrl, credentials, httpOptions);\n  }\n  signUp(info) {\n    return this.http.post(this.signupUrl, info, httpOptions);\n  }\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:8080/api/auth/signin';\n    this.signupUrl = 'http://localhost:8080/api/auth/signup';\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,WAAW;EAKtBC,WAAW,CAACC,WAA0B;IACpC,OAAO,IAAI,CAACC,IAAI,CAACC,IAAI,CAAc,IAAI,CAACC,QAAQ,EAAEH,WAAW,EAAEJ,WAAW,CAAC;EAC7E;EAEAQ,MAAM,CAACC,IAAgB;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACC,IAAI,CAAS,IAAI,CAACI,SAAS,EAAED,IAAI,EAAET,WAAW,CAAC;EAClE;EAEAW,YAAoBN,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAXhB,aAAQ,GAAG,uCAAuC;IAClD,cAAS,GAAG,uCAAuC;EAUnB;;AAb7BH,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAFV;AAAM","names":["HttpHeaders","httpOptions","headers","AuthService","attemptAuth","credentials","http","post","loginUrl","signUp","info","signupUrl","constructor","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ThinkPad\\Desktop\\front_app\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { JwtResponse } from './jwt-response';\nimport { AuthLoginInfo } from './login-info';\nimport { SignupInfo } from './signup-info';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'http://localhost:8080/api/auth/signin';\n  private signupUrl = 'http://localhost:8080/api/auth/signup';\n\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignupInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n\n  constructor(private http: HttpClient) { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}